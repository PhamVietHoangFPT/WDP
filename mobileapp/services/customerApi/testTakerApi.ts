import { API_BASE_URL } from "@env";
import AsyncStorage from "@react-native-async-storage/async-storage";

// Helper th√™m header token
const getAuthHeader = async () => {
  const token = await AsyncStorage.getItem("userToken");
  if (!token) throw new Error("Kh√¥ng t√¨m th·∫•y token!");
  return { Authorization: `Bearer ${token}` };
};

// T·∫°o test taker
export const createTestTaker = async (data: any) => {
  const headers = await getAuthHeader();
  const response = await fetch(`${API_BASE_URL}/test-takers`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      ...headers,
    },
    body: JSON.stringify(data),
  });
  if (!response.ok) throw new Error("L·ªói khi t·∫°o test taker");
  return response.json();
};

// L·∫•y danh s√°ch test takers
export const getTestTakers = async () => {
  const headers = await getAuthHeader();
  const response = await fetch(`${API_BASE_URL}/test-takers`, {
    headers: {
      "Content-Type": "application/json",
      ...headers,
    },
  });
  if (!response.ok) throw new Error("L·ªói khi l·∫•y danh s√°ch test takers");
  return response.json();
};

// ‚úÖ L·∫•y chi ti·∫øt test taker - ƒê√É FIX
export const getTestTakerById = async (id: string) => {
  const headers = await getAuthHeader();
  const response = await fetch(`${API_BASE_URL}/test-takers/${id}`, {
    headers: {
      "Content-Type": "application/json",
      ...headers,
    },
  });

  if (!response.ok) throw new Error(`L·ªói khi l·∫•y test taker ID: ${id}`);
  const json = await response.json();

  // ‚úÖ Tr·∫£ v·ªÅ ph·∫ßn t·ª≠ ƒë·∫ßu ti√™n trong data n·∫øu l√† m·∫£ng
  if (Array.isArray(json.data)) {
    return json.data[0]; // üëà Tr·∫£ ƒë√∫ng object test taker
  }

  return json.data || null;
};

// Xo√° test taker
export const deleteTestTaker = async (id: string) => {
  const headers = await getAuthHeader();
  const response = await fetch(`${API_BASE_URL}/test-takers/${id}`, {
    method: "DELETE",
    headers: {
      "Content-Type": "application/json",
      ...headers,
    },
  });
  if (!response.ok) throw new Error(`L·ªói khi xo√° test taker ID: ${id}`);
  return response.json();
};
