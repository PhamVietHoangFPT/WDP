import React from 'react'
import { Card, Table, Typography, Button } from 'antd'
import { useNavigate } from 'react-router-dom'
import { useGetPaymentListQuery } from '../../features/customer/paymentApi'
import Cookies from 'js-cookie'
import { jwtDecode } from 'jwt-decode'
import HeaderCus from '../../components/layout/Header/HeaderCus'

const { Title } = Typography

export default function PaymentHistory() {
  const navigate = useNavigate()

  // üëâ L·∫•y accountId t·ª´ token
  const token = Cookies.get('userToken')
  const decoded: any = token ? jwtDecode(token) : null
  const accountId = decoded?.id || decoded?._id

  const { data, isLoading } = useGetPaymentListQuery({
    pageSize: 5,
    pageNumber: 1,
    accountId, // ‚úÖ truy·ªÅn n·∫øu API c√≥ l·ªçc theo account
  })

  const columns = [
    {
      title: 'M√£ giao d·ªãch',
      dataIndex: 'transactionReferenceNumber',
      key: 'transactionReferenceNumber',
    },
    {
      title: 'Ng√¢n h√†ng',
      dataIndex: 'tmnCode',
      key: 'tmnCode',
    },
    {
      title: 'S·ªë ti·ªÅn (VNƒê)',
      dataIndex: 'amount',
      key: 'amount',
      render: (amount: number) =>
        typeof amount === 'number'
          ? (amount / 100).toLocaleString('vi-VN')
          : '‚Äî',
    },
    {
      title: 'Th·ªùi gian',
      dataIndex: 'payDate',
      key: 'payDate',
      render: (date: string) =>
        date ? new Date(date).toLocaleString('vi-VN') : '‚Äî',
    },
    {
      title: 'Tr·∫°ng th√°i',
      dataIndex: 'transactionStatus',
      key: 'transactionStatus',
      render: (status: string) =>
        status?.toLowerCase().includes('th√†nh c√¥ng')
          ? 'Th√†nh c√¥ng'
          : 'Th·∫•t b·∫°i',
    },
    {
      title: 'Chi ti·∫øt',
      key: 'action',
      render: (_: any, record: any) => (
        <Button onClick={() => navigate(`/payment-history/${record._id}`)}>
          Xem chi ti·∫øt
        </Button>
      ),
    },
  ]

  return (
    <div>
      <HeaderCus />
      <Card style={{ margin: '40px auto' }}>
        <Title level={3}>L·ªãch s·ª≠ thanh to√°n</Title>
        <Table
          loading={isLoading}
          rowKey='_id'
          dataSource={data?.data || []}
          columns={columns}
          pagination={{ pageSize: 5 }}
        />
      </Card>
    </div>
  )
}
